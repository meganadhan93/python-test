# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on: 
 workflow_dispatch:
  inputs:
   tags: 
    description: 'Environment name'
    required: true
    default: 'UAT'
 

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        
    - run: |
           echo "Tags: ${{ github.event.inputs.tags }}" 
           env_name=${{ github.event.inputs.tags }}
           echo " env name is $env_name"
           cat app1/res.resx | grep "UAT"
           if [ $env_name == PROD ]
           then
           sed -i '0,/UAT/{s/UAT/PROD/}' res.resx
           echo " after replace of env name "
           cat app1/res.resx | grep "UAT"
           else
           echo " By default its UAT"
           fi

      name: get inputs    
      shell: bash      
      
    - name: Install dependencies
      run: |
        echo " env name is 2 $env_name"
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Test with pytest
      run: |
        pytest

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/kickstart:pytest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}     


